# Classes Endpoints
# Get Classes
/:
  get:
    tags:
      - Classes
    summary: List classes with filters and pagination
    description: Retrieve a list of classes with optional filtering and sorting
    parameters:
      - name: topic
        in: query
        description: Filter by topic
        schema:
          type: string
      - name: type
        in: query
        description: Filter by type
        schema:
          type: string
          enum: [online, hybrid]
      - name: instructorId
        in: query
        description: Filter by instructor ID
        schema:
          type: string
          format: uuid
      - name: priceMin
        in: query
        description: Minimum price filter
        schema:
          type: number
          minimum: 0
      - name: priceMax
        in: query
        description: Maximum price filter
        schema:
          type: number
          minimum: 0
      - name: isPublished
        in: query
        description: Filter by publication status
        schema:
          type: boolean
      - name: search
        in: query
        description: Search in title and description
        schema:
          type: string
      - name: sort
        in: query
        description: Sort field
        schema:
          type: string
          enum: [start_date, title, price, available_slots, created_at]
          default: start_date
      - name: order
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: asc
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 100
      - name: offset
        in: query
        description: Number to skip
        schema:
          type: integer
          default: 0
          minimum: 0
    responses:
      '200':
        description: List of classes retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                classes:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                      topic:
                        type: string
                      type:
                        type: string
                      startDate:
                        type: string
                        format: date-time
                      endDate:
                        type: string
                        format: date-time
                      duration:
                        type: string
                      price:
                        type: number
                      instructorId:
                        type: string
                        format: uuid
                      instructorName:
                        type: string
                      availableSlots:
                        type: integer
                      totalSlots:
                        type: integer
                      location:
                        type: string
                      isPublished:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time

  # Create New Class
  post:
    tags:
      - Classes
    summary: Create new class
    description: Create a new class (instructor only)
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - description
              - topic
              - type
              - startDate
              - duration
              - price
              - availableSlots
              - totalSlots
            properties:
              title:
                type: string
                minLength: 1
                description: Class title
              description:
                type: string
                minLength: 10
                description: Class description
              topic:
                type: string
                minLength: 1
                description: Class topic
              type:
                type: string
                enum: [online, hybrid]
                description: Class type
              startDate:
                type: string
                format: date-time
                description: Class start date
              endDate:
                type: string
                format: date-time
                description: Optional end date
              duration:
                type: string
                minLength: 1
                description: Class duration
              price:
                type: number
                minimum: 0
                description: Class price
              availableSlots:
                type: integer
                minimum: 1
                description: Available slots
              totalSlots:
                type: integer
                minimum: 1
                description: Total slots
              location:
                type: string
                description: Class location
    responses:
      '201':
        description: Class created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                topic:
                  type: string
                type:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
                duration:
                  type: string
                price:
                  type: number
                instructorId:
                  type: string
                  format: uuid
                availableSlots:
                  type: integer
                totalSlots:
                  type: integer
                location:
                  type: string
                isPublished:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'

# Get Upcoming Classes
/upcoming:
  get:
    tags:
      - Classes
    summary: Get upcoming classes with filters and pagination
    description: Retrieve a list of upcoming classes (public endpoint)
    parameters:
      - name: topic
        in: query
        description: Filter by topic
        schema:
          type: string
      - name: instructor
        in: query
        description: Filter by instructor name
        schema:
          type: string
      - name: type
        in: query
        description: Filter by type
        schema:
          type: string
          enum: [online, hybrid]
      - name: start_date
        in: query
        description: Filter by start date
        schema:
          type: string
          format: date
      - name: end_date
        in: query
        description: Filter by end date
        schema:
          type: string
          format: date
      - name: sort
        in: query
        description: Sort field
        schema:
          type: string
          enum: [start_date, title, price, available_slots]
          default: start_date
      - name: order
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: asc
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
          default: 1
          minimum: 1
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 12
          minimum: 1
    responses:
      '200':
        description: Upcoming classes retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                classes:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                      topic:
                        type: string
                      type:
                        type: string
                      price:
                        type: number
                      startDate:
                        type: string
                        format: date-time
                      endDate:
                        type: string
                        format: date-time
                      duration:
                        type: string
                      location:
                        type: string
                      availableSlots:
                        type: integer
                      totalSlots:
                        type: integer
                      createdAt:
                        type: string
                        format: date-time
                      instructor:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          firstName:
                            type: string
                          lastName:
                            type: string
                          avatarUrl:
                            type: string
                pagination:
                  type: object
                  properties:
                    page:
                      type: integer
                    limit:
                      type: integer
                    total:
                      type: integer
                    totalPages:
                      type: integer

# Get Class Topics
/topics:
  get:
    tags:
      - Classes
    summary: Get distinct topics for filters
    description: Retrieve all distinct topics available for class filtering (public endpoint)
    responses:
      '200':
        description: Class topics retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                topics:
                  type: array
                  items:
                    type: string
                    description: Topic name


# Get Class by ID
/{id}:
  get:
    tags:
      - Classes
    summary: Get class details including schedule, duration, location, instructor, availableSlots/totalSlots, courses
    description: Retrieve detailed information about a specific class
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Class details retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                topic:
                  type: string
                type:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
                duration:
                  type: string
                price:
                  type: number
                instructorId:
                  type: string
                  format: uuid
                instructorName:
                  type: string
                instructorAvatar:
                  type: string
                instructorBio:
                  type: string
                availableSlots:
                  type: integer
                totalSlots:
                  type: integer
                location:
                  type: string
                isPublished:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      topic:
                        type: string
                      duration:
                        type: string
                      orderIndex:
                        type: integer
      '404':
        $ref: '../responses/NotFound.yaml'

  # Update Class
  put:
    tags:
      - Classes
    summary: Update class
    description: Update an existing class (owner or admin only)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                minLength: 1
                description: Class title
              description:
                type: string
                minLength: 10
                description: Class description
              topic:
                type: string
                minLength: 1
                description: Class topic
              type:
                type: string
                enum: [online, hybrid]
                description: Class type
              startDate:
                type: string
                format: date-time
                description: Class start date
              endDate:
                type: string
                format: date-time
                description: Optional end date
              duration:
                type: string
                minLength: 1
                description: Class duration
              price:
                type: number
                minimum: 0
                description: Class price
              availableSlots:
                type: integer
                minimum: 1
                description: Available slots
              totalSlots:
                type: integer
                minimum: 1
                description: Total slots
              location:
                type: string
                description: Class location
              isPublished:
                type: boolean
                description: Publication status
    responses:
      '200':
        description: Class updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                topic:
                  type: string
                type:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
                duration:
                  type: string
                price:
                  type: number
                availableSlots:
                  type: integer
                totalSlots:
                  type: integer
                location:
                  type: string
                isPublished:
                  type: boolean
                updatedAt:
                  type: string
                  format: date-time
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  # Delete Class
  delete:
    tags:
      - Classes
    summary: Delete a class (soft delete by default)
    description: |
      Soft delete a class by default, which marks it as deleted without removing data.
      
      **Soft Delete (Default):**
      - Sets `deleted_at` timestamp
      - Hides class from normal listings
      - Preserves all data (enrollments, payments)
      - Can be restored using the restore endpoint
      
      **Permanent Delete (permanent=true):**
      - Permanently removes class from database
      - Requires NO enrollments and NO payments
      - Cannot be undone
      - Should only be used for test data cleanup
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID
        schema:
          type: string
          format: uuid
      - name: permanent
        in: query
        required: false
        description: Permanently delete class (dangerous - requires no enrollments/payments)
        schema:
          type: boolean
          default: false
        example: false
    responses:
      '200':
        description: Class deleted successfully
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: Soft delete response
                  properties:
                    message:
                      type: string
                      example: "Class soft deleted successfully"
                    note:
                      type: string
                      example: "Class is hidden but data is preserved. Use restore endpoint to recover."
                    deletedAt:
                      type: string
                      format: date-time
                      example: "2025-10-19T10:30:00.000Z"
                - type: object
                  description: Permanent delete response
                  properties:
                    message:
                      type: string
                      example: "Class permanently deleted"
                    warning:
                      type: string
                      example: "This action cannot be undone"
      '400':
        description: Cannot delete class
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Cannot permanently delete class with 3 enrollment(s) and 2 payment record(s). These records will be orphaned."
                    statusCode:
                      type: integer
                      example: 400
                    errorCode:
                      type: string
                      example: "Class Has Dependencies"
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Class Enrollments
/{id}/enrollments:
  get:
    tags:
      - Classes
    summary: Get class enrollments
    description: Get all enrollments for a specific class (owner or admin only)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Class enrollments retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollments:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      userId:
                        type: string
                        format: uuid
                      userName:
                        type: string
                      userEmail:
                        type: string
                      userAvatar:
                        type: string
                      progress:
                        type: integer
                      status:
                        type: string
                      enrolledAt:
                        type: string
                        format: date-time
                      completedAt:
                        type: string
                        format: date-time
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Enroll in Class
/{id}/enroll:
  post:
    tags:
      - Classes
    summary: Enroll in a class
    description: Enroll in a class with optional sponsorship code
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID
        schema:
          type: string
          format: uuid
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              sponsorshipId:
                type: string
                format: uuid
                description: Sponsorship ID for discounted enrollment
    responses:
      '201':
        description: Successfully enrolled in class
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                userId:
                  type: string
                  format: uuid
                classId:
                  type: string
                  format: uuid
                enrollmentType:
                  type: string
                  example: "class"
                progress:
                  type: integer
                  example: 0
                status:
                  type: string
                  example: "enrolled"
                sponsorshipId:
                  type: string
                  format: uuid
                  nullable: true
                enrolledAt:
                  type: string
                  format: date-time
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  enum: [Class Full, Already Enrolled, Invalid Sponsorship, Invalid Sponsorship Mapping, Sponsorship Not Used]
                message:
                  type: string
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml' 

# Restore Deleted Class
/{id}/restore:
  post:
    tags:
      - Classes
    summary: Restore a soft-deleted class
    description: |
      Restore a class that was soft-deleted (sets deleted_at back to NULL).
      
      **Requirements:**
      - Class must have been soft-deleted (deleted_at IS NOT NULL)
      - Only accessible to admin users
      
      **Effect:**
      - Makes class visible in normal listings again
      - All related data (enrollments, payments) remain intact
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Class ID to restore
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Class restored successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Class restored successfully"
                classId:
                  type: string
                  format: uuid
                  example: "550e8400-e29b-41d4-a716-446655440000"
                classTitle:
                  type: string
                  example: "Python Basics - Fall 2025"
      '400':
        description: Class is not deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Class is not deleted"
                    statusCode:
                      type: integer
                      example: 400
                    errorCode:
                      type: string
                      example: "Not Deleted"
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# List Deleted Classes
/deleted/list:
  get:
    tags:
      - Classes
    summary: List all soft-deleted classes
    description: |
      Get a list of all classes that have been soft-deleted.
      
      **Requirements:**
      - Admin access only
      
      **Use Cases:**
      - View deleted classes for potential restoration
      - Audit trail of deleted content
      - Identify classes for permanent deletion
    security:
      - BearerAuth: []
    responses:
      '200':
        description: List of deleted classes
        content:
          application/json:
            schema:
              type: object
              properties:
                deletedClasses:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      title:
                        type: string
                        example: "Python Basics - Fall 2025"
                      course_id:
                        type: string
                        format: uuid
                        example: "660e8400-e29b-41d4-a716-446655440001"
                      instructor_id:
                        type: string
                        format: uuid
                        nullable: true
                      deleted_at:
                        type: string
                        format: date-time
                        example: "2025-10-19T10:30:00.000Z"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-08-15T08:00:00.000Z"
                count:
                  type: integer
                  example: 3
                  description: Total number of deleted classes
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
        
