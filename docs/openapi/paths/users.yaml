# User Management Endpoints
paths:
  /{id}:
    # Get User by ID
    get:
      tags:
        - Users
      summary: Get User by ID
      description: Get user profile by ID (users can only view their own profile unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                    format: email
                  firstName:
                    type: string
                  lastName:
                    type: string
                  role:
                    type: string
                    enum: [student, instructor, admin]
                  avatarUrl:
                    type: string
                    format: uri
                    nullable: true
                  bio:
                    type: string
                    nullable: true
                  isActive:
                    type: boolean
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  settings:
                    type: object
                    properties:
                      theme:
                        type: string
                        enum: [light, dark, system]
                      language:
                        type: string
                      timezone:
                        type: string
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

    # Update User Profile
    put:
      tags:
        - Users
      summary: Update User Profile
      description: Update user profile information (users can only update their own profile unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's first name
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's last name
                bio:
                  type: string
                  maxLength: 500
                  description: User's biography
                avatarUrl:
                  type: string
                  format: uri
                  description: URL to user's avatar image
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  firstName:
                    type: string
                  lastName:
                    type: string
                  bio:
                    type: string
                    nullable: true
                  avatarUrl:
                    type: string
                    format: uri
                    nullable: true
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          $ref: '../responses/BadRequest.yaml'
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

    # Delete User (Admin Only)
    delete:
      tags:
        - Users
      summary: Delete User (Admin Only)
      description: Delete a user (admin only, cannot delete users with enrollments)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User deleted successfully"
        '400':
          $ref: '../responses/BadRequest.yaml'
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/enrollments:
    # Get User Enrollments
    get:
      tags:
        - Users
      summary: Get User Enrollments
      description: Get user's course and class enrollments (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User enrollments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  enrollments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        enrollmentType:
                          type: string
                          enum: [course, class]
                        progress:
                          type: integer
                        status:
                          type: string
                          enum: [enrolled, in_progress, completed, dropped]
                        enrolledAt:
                          type: string
                          format: date-time
                        completedAt:
                          type: string
                          format: date-time
                          nullable: true
                        course:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                            topic:
                              type: string
                            imageUrl:
                              type: string
                              format: uri
                              nullable: true
                        class:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                            topic:
                              type: string
                        sponsorship:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            discountCode:
                              type: string
                            discountType:
                              type: string
                              enum: [percentage, fixed]
                            discountValue:
                              type: number
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/enrolled-courses:
    # Get User Enrolled Courses
    get:
      tags:
        - Users
      summary: Get User Enrolled Courses
      description: Get user's enrolled courses with detailed information (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User enrolled courses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    courseId:
                      type: string
                      format: uuid
                    courseTitle:
                      type: string
                    progress:
                      type: integer
                    status:
                      type: string
                      enum: [enrolled, in_progress, completed, dropped]
                    enrolledAt:
                      type: string
                      format: date-time
                    lastAccessedAt:
                      type: string
                      format: date-time
                      nullable: true
                    instructorName:
                      type: string
                      nullable: true
                    topic:
                      type: string
                    duration:
                      type: string
                    imageUrl:
                      type: string
                      format: uri
                      nullable: true
                    sponsorship:
                      type: object
                      nullable: true
                      properties:
                        discountCode:
                          type: string
                        discountType:
                          type: string
                          enum: [percentage, fixed]
                        discountValue:
                          type: number
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/enrolled-classes:
    # Get User Enrolled Classes
    get:
      tags:
        - Users
      summary: Get User Enrolled Classes
      description: Get user's enrolled classes with detailed information (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User enrolled classes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    classId:
                      type: string
                      format: uuid
                    classTitle:
                      type: string
                    instructorName:
                      type: string
                      nullable: true
                    startDate:
                      type: string
                      format: date-time
                    endDate:
                      type: string
                      format: date-time
                    type:
                      type: string
                      enum: [online, hybrid]
                    status:
                      type: string
                    enrolledAt:
                      type: string
                      format: date-time
                    topic:
                      type: string
                    duration:
                      type: string
                    location:
                      type: string
                      nullable: true
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/dashboard-stats:
    # Get User Dashboard Stats
    get:
      tags:
        - Users
      summary: Get User Dashboard Stats
      description: Get user's dashboard statistics (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User dashboard stats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalEnrolledCourses:
                    type: integer
                    description: Total number of enrolled courses
                  totalEnrolledClasses:
                    type: integer
                    description: Total number of enrolled classes
                  completedLessons:
                    type: integer
                    description: Number of completed lessons
                  totalLessons:
                    type: integer
                    description: Total number of lessons across enrolled courses
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/certifications:
    # Get User Certifications
    get:
      tags:
        - Users
      summary: Get User Certifications
      description: Get user's certifications (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User certifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  certifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        certificationName:
                          type: string
                        issuer:
                          type: string
                        issuedDate:
                          type: string
                          format: date-time
                        expiryDate:
                          type: string
                          format: date-time
                          nullable: true
                        certificateUrl:
                          type: string
                          format: uri
                          nullable: true
                        verificationCode:
                          type: string
                        status:
                          type: string
                        course:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                            topic:
                              type: string
                        class:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                            topic:
                              type: string
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/test-attempts:
    # Get User Test Attempts
    get:
      tags:
        - Users
      summary: Get User Test Attempts
      description: Get user's test attempts (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User test attempts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  attempts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        testTitle:
                          type: string
                        courseTitle:
                          type: string
                        attemptNumber:
                          type: integer
                        score:
                          type: integer
                          nullable: true
                        totalQuestions:
                          type: integer
                        correctAnswers:
                          type: integer
                          nullable: true
                        status:
                          type: string
                          enum: [in_progress, completed, abandoned]
                        startedAt:
                          type: string
                          format: date-time
                        completedAt:
                          type: string
                          format: date-time
                          nullable: true
                        timeTakenMinutes:
                          type: integer
                          nullable: true
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /{id}/discussions:
    # Get User Discussions
    get:
      tags:
        - Users
      summary: Get User Discussions
      description: Get user's discussions (users can only view their own unless admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User discussions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  discussions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        content:
                          type: string
                        category:
                          type: string
                        isPinned:
                          type: boolean
                        replyCount:
                          type: integer
                        lastActivityAt:
                          type: string
                          format: date-time
                        createdAt:
                          type: string
                          format: date-time
                        course:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
                        class:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                            title:
                              type: string
        '401':
          $ref: '../responses/Unauthorized.yaml'
        '403':
          $ref: '../responses/Forbidden.yaml'
        '404':
          $ref: '../responses/NotFound.yaml'

  /enrollments/courses:
    # Get Current User's Enrolled Courses
    get:
      tags:
        - Users
      summary: Get Current User's Enrolled Courses
      description: Get current user's enrolled courses (frontend compatible)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user's enrolled courses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    courseId:
                      type: string
                      format: uuid
                    courseTitle:
                      type: string
                    progress:
                      type: integer
                    status:
                      type: string
                      enum: [enrolled, in_progress, completed, dropped]
                    enrolledAt:
                      type: string
                      format: date-time
                    lastAccessedAt:
                      type: string
                      format: date-time
                      nullable: true
                    instructorName:
                      type: string
                      nullable: true
                    topic:
                      type: string
                    duration:
                      type: string
                    imageUrl:
                      type: string
                      format: uri
                      nullable: true
                    sponsorship:
                      type: object
                      nullable: true
                      properties:
                        discountCode:
                          type: string
                        discountType:
                          type: string
                          enum: [percentage, fixed]
                        discountValue:
                          type: number
        '401':
          $ref: '../responses/Unauthorized.yaml'

  /enrollments/classes:
    # Get Current User's Enrolled Classes
    get:
      tags:
        - Users
      summary: Get Current User's Enrolled Classes
      description: Get current user's enrolled classes (frontend compatible)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user's enrolled classes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    classId:
                      type: string
                      format: uuid
                    classTitle:
                      type: string
                    instructorName:
                      type: string
                      nullable: true
                    startDate:
                      type: string
                      format: date-time
                    endDate:
                      type: string
                      format: date-time
                    type:
                      type: string
                      enum: [online, hybrid]
                    status:
                      type: string
                    enrolledAt:
                      type: string
                      format: date-time
                    topic:
                      type: string
                    duration:
                      type: string
                    location:
                      type: string
                      nullable: true
        '401':
          $ref: '../responses/Unauthorized.yaml'

  /dashboard-stats:
    # Get Current User's Dashboard Stats
    get:
      tags:
        - Users
      summary: Get Current User's Dashboard Stats
      description: Get current user's dashboard statistics (frontend compatible)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user's dashboard stats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalEnrolledCourses:
                    type: integer
                    description: Total number of enrolled courses
                  totalEnrolledClasses:
                    type: integer
                    description: Total number of enrolled classes
                  completedLessons:
                    type: integer
                    description: Number of completed lessons
                  totalLessons:
                    type: integer
                    description: Total number of lessons across enrolled courses
        '401':
          $ref: '../responses/Unauthorized.yaml'

  /me/settings:
    # Get Current User's Settings
    get:
      tags:
        - Users
      summary: Get Current User's Settings
      description: Get current user's preferences (notifications, privacy, appearance)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user's settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  theme:
                    type: string
                    enum: [light, dark, system]
                    description: User's preferred theme
                  language:
                    type: string
                    description: User's preferred language
                  timezone:
                    type: string
                    description: User's timezone
                  emailNotifications:
                    type: boolean
                    description: Whether email notifications are enabled
                  pushNotifications:
                    type: boolean
                    description: Whether push notifications are enabled
                  courseNotifications:
                    type: boolean
                    description: Whether course-related notifications are enabled
                  classNotifications:
                    type: boolean
                    description: Whether class-related notifications are enabled
                  discussionNotifications:
                    type: boolean
                    description: Whether discussion-related notifications are enabled
                  marketingEmails:
                    type: boolean
                    description: Whether marketing emails are enabled
        '401':
          $ref: '../responses/Unauthorized.yaml'

    # Update Current User's Settings
    put:
      tags:
        - Users
      summary: Update Current User's Settings
      description: Update current user's preferences
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  enum: [light, dark, system]
                  description: User's preferred theme
                language:
                  type: string
                  description: User's preferred language
                timezone:
                  type: string
                  description: User's timezone
                emailNotifications:
                  type: boolean
                  description: Whether email notifications are enabled
                pushNotifications:
                  type: boolean
                  description: Whether push notifications are enabled
                courseNotifications:
                  type: boolean
                  description: Whether course-related notifications are enabled
                classNotifications:
                  type: boolean
                  description: Whether class-related notifications are enabled
                discussionNotifications:
                  type: boolean
                  description: Whether discussion-related notifications are enabled
                marketingEmails:
                  type: boolean
                  description: Whether marketing emails are enabled
      responses:
        '200':
          description: User settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          $ref: '../responses/BadRequest.yaml'
        '401':
          $ref: '../responses/Unauthorized.yaml'

  /me/profile:
    # Update Current User's Profile
    put:
      tags:
        - Users
      summary: Update Current User's Profile
      description: Update current user's profile information
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's first name
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's last name
                phone:
                  type: string
                  description: User's phone number
                location:
                  type: string
                  description: User's location
                bio:
                  type: string
                  maxLength: 500
                  description: User's biography
                timezone:
                  type: string
                  description: User's timezone
                email:
                  type: string
                  format: email
                  description: User's email address
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                  firstName:
                    type: string
                  lastName:
                    type: string
                  avatarUrl:
                    type: string
                    format: uri
                    nullable: true
                  bio:
                    type: string
                    nullable: true
                  timezone:
                    type: string
                    nullable: true
                  location:
                    type: string
                    nullable: true
                  phone:
                    type: string
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          $ref: '../responses/BadRequest.yaml'
        '401':
          $ref: '../responses/Unauthorized.yaml' 