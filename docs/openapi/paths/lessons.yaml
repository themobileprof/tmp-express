# Lessons Endpoints

# Get Lesson Details
/{id}:
  get:
    tags:
      - Lessons
    summary: Get details of a lesson by its ID
    description: Retrieve detailed information about a specific lesson
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Lesson details retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                courseId:
                  type: string
                  format: uuid
                courseTitle:
                  type: string
                title:
                  type: string
                description:
                  type: string
                  nullable: true
                content:
                  type: string
                  nullable: true
                videoUrl:
                  type: string
                  nullable: true
                durationMinutes:
                  type: integer
                orderIndex:
                  type: integer
                isPublished:
                  type: boolean
                isUnlocked:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                progress:
                  type: object
                  nullable: true
                  properties:
                    isCompleted:
                      type: boolean
                    progressPercentage:
                      type: integer
                      minimum: 0
                      maximum: 100
                    timeSpentMinutes:
                      type: integer
                      minimum: 0
                    completedAt:
                      type: string
                      format: date-time
                      nullable: true
                test:
                  type: object
                  nullable: true
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    description:
                      type: string
                      nullable: true
                    durationMinutes:
                      type: integer
                    passingScore:
                      type: integer
                    maxAttempts:
                      type: integer
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        description: |
          Access denied. Common causes:
          - Enrollment required to access lessons
          - Lesson is locked (complete previous lesson's test first)
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  enum: [ENROLLMENT_REQUIRED, Lesson Locked]
                message:
                  type: string
                  example: "Complete the test for 'Previous Lesson' to unlock this lesson"
                details:
                  type: object
                  properties:
                    courseId:
                      type: string
                      format: uuid
      '404':
        $ref: '../responses/NotFound.yaml'

  put:
    tags:
      - Lessons
    summary: Update a lesson by its ID
    description: Update an existing lesson (requires authentication and owner/admin authorization)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                minLength: 1
                description: Updated lesson title
              description:
                type: string
                description: Updated lesson description
              content:
                type: string
                description: Updated lesson content
              videoUrl:
                type: string
                format: uri
                description: Updated video URL
              durationMinutes:
                type: integer
                minimum: 0
                description: Updated duration in minutes
              orderIndex:
                type: integer
                minimum: 0
                description: Updated order index
              isPublished:
                type: boolean
                description: Whether the lesson is published
    responses:
      '200':
        description: Lesson updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                  nullable: true
                content:
                  type: string
                  nullable: true
                videoUrl:
                  type: string
                  nullable: true
                durationMinutes:
                  type: integer
                orderIndex:
                  type: integer
                isPublished:
                  type: boolean
                updatedAt:
                  type: string
                  format: date-time
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  delete:
    tags:
      - Lessons
    summary: Delete a lesson by its ID
    description: Delete a lesson (requires authentication and owner/admin authorization)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Lesson deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Lesson deleted successfully"
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Lesson Workshop (Student)
/{id}/workshop:
  get:
    tags:
      - Lessons
    summary: Get the enabled workshop spec for a lesson
    description: Returns the interactive terminal workshop spec if enabled for the lesson. Returns null if no workshop or disabled.
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Workshop spec fetched
        content:
          application/json:
            schema:
              type: object
              properties:
                lesson:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                workshop:
                  oneOf:
                    - type: 'null'
                    - type: object
                      properties:
                        isEnabled:
                          type: boolean
                          example: true
                        spec:
                          $ref: '../schemas/LessonWorkshopSpec'
                        updatedAt:
                          type: string
                          format: date-time
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Admin: Lesson Workshop Management
/admin/lessons/{lessonId}/workshop:
  get:
    tags:
      - Lessons
    summary: Get a lesson's workshop spec (admin)
    security:
      - BearerAuth: []
    parameters:
      - name: lessonId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Workshop returned or null
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'
  post:
    tags:
      - Lessons
    summary: Create or replace a lesson's workshop spec (admin)
    security:
      - BearerAuth: []
    parameters:
      - name: lessonId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              isEnabled:
                type: boolean
                default: false
              spec:
                $ref: '../schemas/LessonWorkshopSpec'
    responses:
      '201':
        description: Workshop upserted
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'
  put:
    tags:
      - Lessons
    summary: Update a lesson's workshop spec (admin)
    security:
      - BearerAuth: []
    parameters:
      - name: lessonId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              isEnabled:
                type: boolean
              spec:
                $ref: '../schemas/LessonWorkshopSpec'
    responses:
      '200':
        description: Workshop updated
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'
  delete:
    tags:
      - Lessons
    summary: Delete a lesson's workshop spec (admin)
    security:
      - BearerAuth: []
    parameters:
      - name: lessonId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Workshop deleted
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Lesson Tests
/{id}/tests:
  get:
    tags:
      - Lessons
    summary: Get all tests for a lesson
    description: Retrieve all tests associated with a specific lesson
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Lesson tests retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                lesson:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    courseId:
                      type: string
                      format: uuid
                tests:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                        nullable: true
                      durationMinutes:
                        type: integer
                      passingScore:
                        type: integer
                      maxAttempts:
                        type: integer
                      orderIndex:
                        type: integer
                      isPublished:
                        type: boolean
                      questionCount:
                        type: integer
                        description: Number of questions in the test
                      attemptCount:
                        type: integer
                        description: Number of attempts made on the test
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Mark Lesson as Completed
/{id}/complete:
  post:
    tags:
      - Lessons
    summary: Mark a lesson as completed for the authenticated user
    description: Mark a lesson as completed, automatically updating course progress
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              timeSpentMinutes:
                type: integer
                minimum: 0
                default: 0
                description: Time spent on the lesson in minutes
    responses:
      '200':
        description: Lesson marked as completed
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Lesson marked as completed"
                lessonId:
                  type: string
                  format: uuid
                completedAt:
                  type: string
                  format: date-time
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Lesson Progress
/{id}/progress:
  get:
    tags:
      - Lessons
    summary: Get the current progress for a lesson for the authenticated user
    description: Retrieve progress information for a specific lesson
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Lesson progress retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                lessonId:
                  type: string
                  format: uuid
                isCompleted:
                  type: boolean
                  description: Whether the lesson is completed
                progressPercentage:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: Progress percentage
                timeSpentMinutes:
                  type: integer
                  minimum: 0
                  description: Time spent on the lesson
                completedAt:
                  type: string
                  format: date-time
                  nullable: true
                  description: When the lesson was completed
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Lesson Discussions
/{id}/discussions:
  get:
    tags:
      - Lessons
    summary: Get all discussions for a specific lesson
    description: Retrieve all discussions related to a specific lesson
    parameters:
      - name: id
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
      - name: category
        in: query
        description: Filter by category
        schema:
          type: string
          enum: [general, course, lesson, class, question, help, feedback]
      - name: search
        in: query
        description: Search in title and content
        schema:
          type: string
      - name: sort
        in: query
        description: Sort field
        schema:
          type: string
          enum: [created_at, title, last_activity_at, reply_count, likes_count]
          default: last_activity_at
      - name: order
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: desc
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 100
      - name: offset
        in: query
        description: Number to skip
        schema:
          type: integer
          default: 0
          minimum: 0
    responses:
      '200':
        description: Lesson discussions retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                lesson:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    courseId:
                      type: string
                      format: uuid
                    courseTitle:
                      type: string
                discussions:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      content:
                        type: string
                      category:
                        type: string
                      authorName:
                        type: string
                      replyCount:
                        type: integer
                      likesCount:
                        type: integer
                      lastActivityAt:
                        type: string
                        format: date-time
                      createdAt:
                        type: string
                        format: date-time
                pagination:
                  type: object
                  properties:
                    page:
                      type: integer
                    limit:
                      type: integer
                    total:
                      type: integer
                    pages:
                      type: integer
      '404':
        $ref: '../responses/NotFound.yaml'

# Admin: Get Lessons for a Course
/admin/courses/{courseId}/lessons:
  get:
    tags:
      - Lessons
    summary: Get all lessons for a course (admin only)
    description: Retrieve all lessons for a specific course with admin access
    security:
      - BearerAuth: []
    parameters:
      - name: courseId
        in: path
        required: true
        description: Course ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Course lessons retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                courseId:
                  type: string
                  format: uuid
                lessons:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                        nullable: true
                      orderIndex:
                        type: integer
                      isPublished:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'

  post:
    tags:
      - Lessons
    summary: Create a new lesson for a course (admin only)
    description: Create a new lesson in a specific course
    security:
      - BearerAuth: []
    parameters:
      - name: courseId
        in: path
        required: true
        description: Course ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - durationMinutes
              - orderIndex
            properties:
              title:
                type: string
                minLength: 1
                description: Lesson title
              description:
                type: string
                description: Lesson description
              content:
                type: string
                description: Lesson content
              videoUrl:
                type: string
                format: uri
                description: Video URL
              durationMinutes:
                type: integer
                minimum: 0
                description: Duration in minutes
              orderIndex:
                type: integer
                minimum: 0
                description: Order index
              isPublished:
                type: boolean
                default: false
                description: Whether the lesson is published
    responses:
      '201':
        description: Lesson created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                  nullable: true
                content:
                  type: string
                  nullable: true
                videoUrl:
                  type: string
                  nullable: true
                durationMinutes:
                  type: integer
                orderIndex:
                  type: integer
                isPublished:
                  type: boolean
                courseId:
                  type: string
                  format: uuid
                createdAt:
                  type: string
                  format: date-time
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        $ref: '../responses/Forbidden.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Course Lessons (for enrolled users)
/courses/{id}/lessons:
  get:
    tags:
      - Lessons
    summary: Get all lessons for a course
    description: Retrieve all lessons for a specific course (for enrolled users)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Course ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Course lessons retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                courseId:
                  type: string
                  format: uuid
                lessons:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                        nullable: true
                      orderIndex:
                        type: integer
                      isPublished:
                        type: boolean
                      isUnlocked:
                        type: boolean
                      isCompleted:
                        type: boolean
                      progressPercentage:
                        type: integer
                        minimum: 0
                        maximum: 100
                      test:
                        type: object
                        nullable: true
                        properties:
                          id:
                            type: string
                            format: uuid
                          title:
                            type: string
                          passingScore:
                            type: integer
                          maxAttempts:
                            type: integer
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '403':
        description: Enrollment required to view course lessons
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "ENROLLMENT_REQUIRED"
                message:
                  type: string
                  example: "Enrollment required to view course lessons"
      '404':
        $ref: '../responses/NotFound.yaml' 