# Discussions Endpoints

# Get Discussions
get:
  tags:
    - Discussions
  summary: List discussions with filters and pagination
  description: Retrieve a list of discussions with optional filtering by category, course, lesson, class, and tags
  security:
    - BearerAuth: []
  parameters:
    - name: category
      in: query
      description: Filter by discussion category
      schema:
        type: string
        enum: [general, course, lesson, class, question, help, feedback]
    - name: courseId
      in: query
      description: Filter by course ID for course-specific discussions
      schema:
        type: string
        format: uuid
    - name: lessonId
      in: query
      description: Filter by lesson ID for lesson-specific discussions
      schema:
        type: string
        format: uuid
    - name: classId
      in: query
      description: Filter by class ID for class-specific discussions
      schema:
        type: string
        format: uuid
    - name: search
      in: query
      description: Search in title and content
      schema:
        type: string
    - name: tags
      in: query
      description: Filter by tags (comma-separated)
      schema:
        type: string
    - name: sort
      in: query
      description: Sort field
      schema:
        type: string
        enum: [created_at, title, last_activity, reply_count, likes_count]
        default: created_at
    - name: order
      in: query
      description: Sort order
      schema:
        type: string
        enum: [asc, desc]
        default: desc
    - name: limit
      in: query
      description: Items per page
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
    - name: offset
      in: query
      description: Number to skip
      schema:
        type: integer
        default: 0
        minimum: 0
  responses:
    '200':
      description: List of discussions retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              discussions:
                type: array
                items:
                  $ref: '../schemas/Discussion.yaml'
              pagination:
                $ref: '../schemas/Pagination.yaml'
    '400':
      $ref: '../responses/BadRequest.yaml'
    '401':
      $ref: '../responses/Unauthorized.yaml'

# Create Discussion
post:
  tags:
    - Discussions
  summary: Create a new discussion
  description: Create a new discussion with optional course, lesson, or class association
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - title
            - content
            - category
          properties:
            title:
              type: string
              description: Discussion title
            content:
              type: string
              description: Discussion content
            category:
              type: string
              enum: [general, course, lesson, class, question, help, feedback]
              description: Discussion category
            courseId:
              type: string
              format: uuid
              description: Course ID for course-specific discussions
            lessonId:
              type: string
              format: uuid
              description: Lesson ID for lesson-specific discussions
            classId:
              type: string
              format: uuid
              description: Class ID for class-specific discussions
            tags:
              type: array
              items:
                type: string
              description: Array of tags for better organization
  responses:
    '201':
      description: Discussion created successfully
      content:
        application/json:
          schema:
            $ref: '../schemas/Discussion.yaml'
    '400':
      $ref: '../responses/BadRequest.yaml'
    '401':
      $ref: '../responses/Unauthorized.yaml'

# Get Discussion by ID
/{id}:
  get:
    tags:
      - Discussions
    summary: Get discussion details with replies and likes count
    description: Retrieve detailed information about a specific discussion
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Discussion ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Discussion details retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/Discussion.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  # Get Discussion Replies
  get:
    tags:
      - Discussions
    summary: Get replies for a discussion
    description: Retrieve all replies for a specific discussion
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Discussion ID
        schema:
          type: string
          format: uuid
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 100
      - name: offset
        in: query
        description: Number to skip
        schema:
          type: integer
          default: 0
          minimum: 0
    responses:
      '200':
        description: Discussion replies retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                replies:
                  type: array
                  items:
                    $ref: '../schemas/DiscussionReply.yaml'
                pagination:
                  $ref: '../schemas/Pagination.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  # Add Reply
  post:
    tags:
      - Discussions
    summary: Add a reply to a discussion
    description: Add a new reply to an existing discussion
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Discussion ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - content
            properties:
              content:
                type: string
                description: Reply content
    responses:
      '201':
        description: Reply added successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/DiscussionReply.yaml'
      '400':
        $ref: '../responses/BadRequest.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  # Like Discussion
  post:
    tags:
      - Discussions
    summary: Like a discussion
    description: Like a discussion (toggle like status)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Discussion ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Discussion liked successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Discussion liked successfully"
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

  # Unlike Discussion
  delete:
    tags:
      - Discussions
    summary: Unlike a discussion
    description: Remove like from a discussion
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Discussion ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Discussion unliked successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Discussion unliked successfully"
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Course Discussions
/courses/{courseId}/discussions:
  get:
    tags:
      - Discussions
    summary: Get all discussions for a specific course
    description: Retrieve all discussions related to a specific course
    security:
      - BearerAuth: []
    parameters:
      - name: courseId
        in: path
        required: true
        description: Course ID
        schema:
          type: string
          format: uuid
      - name: category
        in: query
        description: Filter by category
        schema:
          type: string
          enum: [general, course, lesson, class, question, help, feedback]
      - name: lessonId
        in: query
        description: Filter by specific lesson
        schema:
          type: string
          format: uuid
      - name: search
        in: query
        description: Search in title and content
        schema:
          type: string
      - name: sort
        in: query
        description: Sort field
        schema:
          type: string
          enum: [created_at, title, last_activity, reply_count, likes_count]
          default: created_at
      - name: order
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: desc
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 100
      - name: offset
        in: query
        description: Number to skip
        schema:
          type: integer
          default: 0
          minimum: 0
    responses:
      '200':
        description: Course discussions retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    topic:
                      type: string
                discussions:
                  type: array
                  items:
                    $ref: '../schemas/Discussion.yaml'
                pagination:
                  $ref: '../schemas/Pagination.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Lesson Discussions
/lessons/{lessonId}/discussions:
  get:
    tags:
      - Discussions
    summary: Get all discussions for a specific lesson
    description: Retrieve all discussions related to a specific lesson
    security:
      - BearerAuth: []
    parameters:
      - name: lessonId
        in: path
        required: true
        description: Lesson ID
        schema:
          type: string
          format: uuid
      - name: category
        in: query
        description: Filter by category
        schema:
          type: string
          enum: [general, course, lesson, class, question, help, feedback]
      - name: search
        in: query
        description: Search in title and content
        schema:
          type: string
      - name: sort
        in: query
        description: Sort field
        schema:
          type: string
          enum: [created_at, title, last_activity, reply_count, likes_count]
          default: created_at
      - name: order
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: desc
      - name: limit
        in: query
        description: Items per page
        schema:
          type: integer
          default: 20
          minimum: 1
          maximum: 100
      - name: offset
        in: query
        description: Number to skip
        schema:
          type: integer
          default: 0
          minimum: 0
    responses:
      '200':
        description: Lesson discussions retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                lesson:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    courseId:
                      type: string
                      format: uuid
                    courseTitle:
                      type: string
                discussions:
                  type: array
                  items:
                    $ref: '../schemas/Discussion.yaml'
                pagination:
                  $ref: '../schemas/Pagination.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'
      '404':
        $ref: '../responses/NotFound.yaml'

# Get Discussion Categories
/categories:
  get:
    tags:
      - Discussions
    summary: Get available discussion categories and their descriptions
    description: Retrieve all available discussion categories with their descriptions and icons
    security:
      - BearerAuth: []
    responses:
      '200':
        description: Discussion categories retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  type: array
                  items:
                    $ref: '../schemas/DiscussionCategory.yaml'
      '401':
        $ref: '../responses/Unauthorized.yaml'

# Get Popular Tags
/tags:
  get:
    tags:
      - Discussions
    summary: Get popular discussion tags for better organization
    description: Retrieve popular discussion tags with usage counts
    security:
      - BearerAuth: []
    parameters:
      - name: limit
        in: query
        description: Number of tags to return
        schema:
          type: integer
          default: 50
          minimum: 1
          maximum: 100
    responses:
      '200':
        description: Popular tags retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      tag:
                        type: string
                        description: Tag name
                      count:
                        type: integer
                        description: Number of times this tag is used
                      category:
                        type: string
                        description: Category of the tag
      '401':
        $ref: '../responses/Unauthorized.yaml' 